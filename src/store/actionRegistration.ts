import {
  accountDataSliceName,
  associatedObjectsActions,
  batchImportActions,
  colorsConfigureActions,
  configActions,
  dashboardBasedHierarchyActions,
  dataAuditActions,
  dataflowDiagramActions,
  dataflowDiagramPageActions,
  dataflowPageActions,
  deleteObjectWithLinksActions,
  diagramsActions,
  diagramsPageActions,
  graphsSettingsPageActions,
  hierarchyActions,
  hierarchyBuilderActions,
  inventoryActions,
  inventoryMapWidgetActions,
  invTableActions,
  kanbanBoardActions,
  layersActions,
  leftPanelWidgetActions,
  leftSidebarActions,
  localeActions,
  objectCRUDActions,
  objectDetailsPageActions,
  paramsResolverActions,
  processManagerActions,
  processManagerTableActions,
  processManagerUserTasksTableActions,
  settingsObjectActions,
  severityActions,
  shareStateActions,
  sidebarActions,
  tabsActions,
  taskManagerActions,
  themeActions,
  userManagementActions,
  workflowsActions,
} from '6_shared';

export const actionRegistration = {
  hierarchy: hierarchyActions,
  hierarchyBuilder: hierarchyBuilderActions,
  settingsObject: settingsObjectActions,
  userManagement: userManagementActions,
  sidebar: sidebarActions,
  tabs: tabsActions,
  workflow: workflowsActions,
  objectCRUD: objectCRUDActions,
  processManagerData: processManagerActions,
  severity: severityActions,
  processManagerTable: processManagerTableActions,
  processManagerUserTasksTable: processManagerUserTasksTableActions,
  inventory: inventoryActions,
  inventoryTable: invTableActions,
  inventoryMapWidget: inventoryMapWidgetActions,
  leftPanelWidget: leftPanelWidgetActions,
  associatedObjectsComponent: associatedObjectsActions,
  leftSidebar: leftSidebarActions,
  batchImport: batchImportActions,
  paramsResolver: paramsResolverActions,
  deleteObjectWithLinksComponent: deleteObjectWithLinksActions,
  dashboardBasedHierarchy: dashboardBasedHierarchyActions,
  layers: layersActions,
  taskManager: taskManagerActions,
  dataAudit: dataAuditActions,
  locale: localeActions,
  theme: themeActions,
  kanbanBoard: kanbanBoardActions,
  shareState: shareStateActions,
  objectDetailsPage: objectDetailsPageActions,
  dataflowDiagramPage: dataflowDiagramPageActions,
  dataflowPage: dataflowPageActions,
  diagramsPage: diagramsPageActions,
  dataflowDiagram: dataflowDiagramActions,
  colorsConfigure: colorsConfigureActions,
  diagrams: diagramsActions,
  graphsSettingsPage: graphsSettingsPageActions,
  config: configActions,
  accountData: accountDataSliceName,
};

export type RegisteredActions = keyof typeof actionRegistration;
